<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="18" passed="15" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-10-08T14:50:42 IST" name="Suite" finished-at="2021-10-08T14:58:52 IST" duration-ms="490426">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:DemoMyRunner.DemoTestRunner@942a29c]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2021-10-08T14:50:42 IST" name="Test" finished-at="2021-10-08T14:58:52 IST" duration-ms="490426">
      <class name="DemoMyRunner.DemoTestRunner">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:DemoMyRunner.DemoTestRunner@942a29c]" started-at="2021-10-08T14:50:42 IST" name="setUpClass" finished-at="2021-10-08T14:50:45 IST" duration-ms="3034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:DemoMyRunner.DemoTestRunner@942a29c]" started-at="2021-10-08T14:50:45 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-10-08T14:52:32 IST" duration-ms="107842" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Test AddTo Cart Button"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[DemoBlaze Buy Function]"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="tbodyid"]/div[1]/div/div/h4/a"}
  (Session info: chrome=94.0.4606.71)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-2T0C603P', ip: '192.168.225.147', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 94.0.4606.71, chrome: {chromedriverVersion: 94.0.4606.61 (418b78f5838ed..., userDataDir: C:\Users\ADARSH~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:49178}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 69ff255fcb7ad6d7b58f95040959c6f2
*** Element info: {Using=xpath, value=//*[@id="tbodyid"]/div[1]/div/div/h4/a}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="tbodyid"]/div[1]/div/div/h4/a"}
  (Session info: chrome=94.0.4606.71)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-2T0C603P', ip: '192.168.225.147', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 94.0.4606.71, chrome: {chromedriverVersion: 94.0.4606.61 (418b78f5838ed..., userDataDir: C:\Users\ADARSH~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:49178}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 69ff255fcb7ad6d7b58f95040959c6f2
*** Element info: {Using=xpath, value=//*[@id="tbodyid"]/div[1]/div/div/h4/a}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.pages.BuyPage.selectItem(BuyPage.java:61)
at DemoStepDef.BuyItem.user_selects_product(BuyItem.java:34)
at âœ½.User Selects Product(file:///C:/Users/Adarsh2299/eclipse-workspace/DemoBlaze/src/test/java/DemoFeatures/Buy.feature:6)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:DemoMyRunner.DemoTestRunner@942a29c]" started-at="2021-10-08T14:52:32 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-10-08T14:53:23 IST" duration-ms="50386" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Test Buy PopUp Window"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[DemoBlaze Buy Function]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:DemoMyRunner.DemoTestRunner@942a29c]" started-at="2021-10-08T14:53:23 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-10-08T14:54:10 IST" duration-ms="47360" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Test online Payment Fuction"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[DemoBlaze Buy Function]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:DemoMyRunner.DemoTestRunner@942a29c]" started-at="2021-10-08T14:54:10 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-10-08T14:54:49 IST" duration-ms="38614" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Test Buy Fuction for Invalid CreditCard"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[DemoBlaze Buy Function]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:DemoMyRunner.DemoTestRunner@942a29c]" started-at="2021-10-08T14:54:49 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-10-08T14:55:13 IST" duration-ms="24620" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Test Buy Fuction for Invalid Address"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[DemoBlaze Buy Function]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:DemoMyRunner.DemoTestRunner@942a29c]" started-at="2021-10-08T14:55:13 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-10-08T14:55:14 IST" duration-ms="258" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["To validate the sucessful Navigation to Demo_blaze Confirm booking page."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[DemoBlaze Confirm booking Functionality]"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'User is into confirm booking' and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("User is into confirm booking")
public void user_is_into_confirm_booking() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("User clicks Confirm Booking Button")
public void user_clicks_confirm_booking_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("User Gets Popup shows order is booked")
public void user_gets_popup_shows_order_is_booked() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'User is into confirm booking' and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("User is into confirm booking")
public void user_is_into_confirm_booking() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("User clicks Confirm Booking Button")
public void user_clicks_confirm_booking_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("User Gets Popup shows order is booked")
public void user_gets_popup_shows_order_is_booked() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:135)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:117)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:131)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:31)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:DemoMyRunner.DemoTestRunner@942a29c]" started-at="2021-10-08T14:55:14 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-10-08T14:56:12 IST" duration-ms="58082" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["To validate the successfully Navigation to Demo_blaze Login page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[DemoBlaze Login Functionality]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:DemoMyRunner.DemoTestRunner@942a29c]" started-at="2021-10-08T14:56:12 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-10-08T14:56:39 IST" duration-ms="27078" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Test Login Functionality"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[DemoBlaze Login Functionality]"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=94.0.4606.71)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-2T0C603P', ip: '192.168.225.147', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 94.0.4606.71, chrome: {chromedriverVersion: 94.0.4606.61 (418b78f5838ed..., userDataDir: C:\Users\ADARSH~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:63512}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: b2a20a23e2f02ba6756e4e29df78aa17]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=94.0.4606.71)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-2T0C603P', ip: '192.168.225.147', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 94.0.4606.71, chrome: {chromedriverVersion: 94.0.4606.61 (418b78f5838ed..., userDataDir: C:\Users\ADARSH~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:63512}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: b2a20a23e2f02ba6756e4e29df78aa17
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.isDisplayed(RemoteWebElement.java:326)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy24.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
at com.pages.LoginPage.validateSuccessLogin(LoginPage.java:54)
at DemoStepDef.LoginStepDef.luser_should_be_able_to_login_successfully(LoginStepDef.java:51)
at âœ½.l-User should be able to Login successfully test(file:///C:/Users/Adarsh2299/eclipse-workspace/DemoBlaze/src/test/java/DemoFeatures/Login.feature:12)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:DemoMyRunner.DemoTestRunner@942a29c]" started-at="2021-10-08T14:56:39 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-10-08T14:57:01 IST" duration-ms="21988" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Test Login Functionality"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[DemoBlaze Login Functionality]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:DemoMyRunner.DemoTestRunner@942a29c]" started-at="2021-10-08T14:57:01 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-10-08T14:57:18 IST" duration-ms="17034" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Test Login Functionality with invalid data."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[DemoBlaze Login Functionality]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:DemoMyRunner.DemoTestRunner@942a29c]" started-at="2021-10-08T14:57:18 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-10-08T14:57:29 IST" duration-ms="11293" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Test Login Functionality with invalid data."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[DemoBlaze Login Functionality]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:DemoMyRunner.DemoTestRunner@942a29c]" started-at="2021-10-08T14:57:29 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-10-08T14:57:39 IST" duration-ms="9435" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["To validate the sucessful Navigation to Demo_blaze Signup page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[DemoBlaze Registration Functionality]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:DemoMyRunner.DemoTestRunner@942a29c]" started-at="2021-10-08T14:57:39 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-10-08T14:57:50 IST" duration-ms="11534" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Test Registration Functionality"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[DemoBlaze Registration Functionality]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:DemoMyRunner.DemoTestRunner@942a29c]" started-at="2021-10-08T14:57:50 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-10-08T14:58:04 IST" duration-ms="13366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Test Registration Functionality"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[DemoBlaze Registration Functionality]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:DemoMyRunner.DemoTestRunner@942a29c]" started-at="2021-10-08T14:58:04 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-10-08T14:58:14 IST" duration-ms="10105" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["To validate that user can filter products by PHONE category"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[DemoBlaze Search Functionality]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:DemoMyRunner.DemoTestRunner@942a29c]" started-at="2021-10-08T14:58:14 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-10-08T14:58:25 IST" duration-ms="11209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["To validate that user can filter products by LAPTOP category"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[DemoBlaze Search Functionality]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:DemoMyRunner.DemoTestRunner@942a29c]" started-at="2021-10-08T14:58:25 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-10-08T14:58:36 IST" duration-ms="11218" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["To validate that user can filter products by MONITORS category"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[DemoBlaze Search Functionality]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:DemoMyRunner.DemoTestRunner@942a29c]" started-at="2021-10-08T14:58:36 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-10-08T14:58:52 IST" duration-ms="15749" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["To validate that add to cart button is functional."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[DemoBlaze Search Functionality]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:DemoMyRunner.DemoTestRunner@942a29c]" started-at="2021-10-08T14:58:52 IST" name="tearDownClass" finished-at="2021-10-08T14:58:52 IST" duration-ms="91" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- DemoMyRunner.DemoTestRunner -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
